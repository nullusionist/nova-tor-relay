# .gitlab-ci.yml — mirror upstream to GitHub / GitLab.com / Codeberg
stages: [deploy]

.variables-template: &vars
  GIT_STRATEGY: fetch
  GIT_DEPTH: "0"

# 1) Main-branch pipeline → hard-sync branch + tags to match upstream exactly.
mirror:branch:
  stage: deploy
  image: alpine:3.22
  variables: *vars
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - apk add --no-cache git
    - git config --global user.email "mirror@nullusionist.dev"
    - git config --global user.name  "Nova Mirror Bot"
    - git config --global safe.directory "$CI_PROJECT_DIR"

    # Remotes (reset if they already exist)
    - git remote remove github  2>/dev/null || true
    - git remote remove gitlab  2>/dev/null || true
    - git remote remove codeberg 2>/dev/null || true
    - git remote add github  "https://${MIRROR_GITHUB_TOKEN}@github.com/nullusionist/nova-tor-relay.git"
    - git remote add gitlab  "https://oauth2:${MIRROR_GITLAB_TOKEN}@gitlab.com/nullusionist/nova-tor-relay.git"
    - git remote add codeberg "https://${MIRROR_CODEBERG_TOKEN}@codeberg.org/nullusionist/nova-tor-relay.git"

    # Make local branch & tags match upstream (origin) exactly
    - git fetch origin --tags --prune
    - git checkout -B main origin/main
    - git tag -l | sort -u > /tmp/tags.origin

    # Helper: force-sync a mirror to upstream state (branch + tags)
    - |
      sync_mirror() {
        R="$1"
        echo "==> Syncing $R"
        # Fetch mirror (establish lease)
        git fetch "$R" --prune --tags || true
        # Branch: force-with-lease + prune remote branches
        git push --force-with-lease --prune "$R" main:main
        # Tags: force-update all tags to upstream values
        git push --force "$R" 'refs/tags/*:refs/tags/*'
        # Prune tags that exist on mirror but not upstream
        git ls-remote --tags "$R" \
          | awk '{print $2}' \
          | sed 's@refs/tags/@@; s@\^\{\}@@' \
          | sort -u > /tmp/tags.mirror
        grep -Fvx -f /tmp/tags.origin /tmp/tags.mirror | while read -r T; do
          [ -n "$T" ] && git push "$R" ":refs/tags/$T" || true
        done
      }
      sync_mirror github
      sync_mirror gitlab
      sync_mirror codeberg

# 2) Tag-only pipeline → push just the tag (do not touch branches).
mirror:tag:
  stage: deploy
  image: alpine:3.22
  variables: *vars
  rules:
    - if: '$CI_COMMIT_TAG'
  script:
    - apk add --no-cache git
    - git config --global user.email "mirror@nullusionist.dev"
    - git config --global user.name  "Nova Mirror Bot"
    - git config --global safe.directory "$CI_PROJECT_DIR"

    - git remote remove github  2>/dev/null || true
    - git remote remove gitlab  2>/dev/null || true
    - git remote remove codeberg 2>/dev/null || true
    - git remote add github  "https://${MIRROR_GITHUB_TOKEN}@github.com/nullusionist/nova-tor-relay.git"
    - git remote add gitlab  "https://oauth2:${MIRROR_GITLAB_TOKEN}@gitlab.com/nullusionist/nova-tor-relay.git"
    - git remote add codeberg "https://${MIRROR_CODEBERG_TOKEN}@codeberg.org/nullusionist/nova-tor-relay.git"

    - git fetch origin --tags
    # Push only the tag that triggered the pipeline
    - git push github  "$CI_COMMIT_TAG"
    - git push gitlab  "$CI_COMMIT_TAG"
    - git push codeberg "$CI_COMMIT_TAG"
